!function(e){"use strict";function i(e){return this.figure=e,this.lastWindowWidth=window.innerWidth,this.viewerOpen=!1,this.transitionEndEvent=function(){var e,i=document.createElement("fakeelement"),t={WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",MSTransition:"msTransitionEnd",OTransition:"otransitionend",transition:"transitionend"};for(e in t)if(t.hasOwnProperty(e)&&void 0!==i.style[e])return t[e]}(),this.load(),0<=this.figure.className.indexOf("viewer")&&this.figure.addEventListener("click",this.openViewer.bind(this)),this}i.prototype.closeViewer=function(){window.removeEventListener("scroll",this.onScroll),this.figure.addEventListener(this.transitionEndEvent,function(){-1==document.body.className.indexOf("viewer-open")&&(this.viewerOpen=!1,this.figure.style.zIndex="")}.bind(this)),document.body.className=document.body.className.replace("viewer-open","").replace(/^\s+|\s+$/g,""),this.figure.style.transform=""},i.prototype.openViewer=function(){var e,i,t,n,s,o,r,a;0<=document.body.className.indexOf("viewer-open")?this.closeViewer():(this.viewerOpen=!0,s=window.getComputedStyle(this.figure),e=parseFloat(s.height),i=parseFloat(s.width),t=window.innerHeight,n=window.innerWidth,s=this.figure.getBoundingClientRect(),i/e<=n/t?(r=(n-i*(o=t/e))/2-s.left,a=-1*s.top):(a=(t-e*(o=n/i))/2-s.top,r=-1*s.left),document.body.className+=" viewer-open",this.figure.style.zIndex="800",this.figure.style.transform="translate3d("+r+"px,"+a+"px,0) scale("+o+")",setTimeout(function(){this.lastWindowWidth<1440&&this.loadRaw()}.bind(this),300),this.onScroll=function(){var e=this.figure.getBoundingClientRect().top;50<Math.abs(e)&&this.closeViewer()}.bind(this),window.addEventListener("scroll",this.onScroll))},i.prototype.load=function(){var e=new Image;e.src=this.figure.dataset[this.getSize()],e.className="full",e.onload=function(){this.figure.className+=" loaded"}.bind(this),this.figure.appendChild(e)},i.prototype.loadRaw=function(){var e=new Image;e.src=this.figure.dataset.large,e.className="raw",e.onload=function(){this.figure.className+=" loaded-raw"}.bind(this),this.figure.appendChild(e)},i.prototype.getSize=function(){return this.lastWindowWidth<768?"small":this.lastWindowWidth<1440?"medium":"large"},"function"==typeof define&&define.amd?define(i):"undefined"!=typeof module&&module.exports?module.exports=i:e.ProgressiveImage=i}(this);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
